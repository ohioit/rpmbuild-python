---
- hosts: all
  gather_facts: yes

  tasks:
    - name: Include Var files
      include_vars: "{{ item }}"
      with_fileglob:
        - vars.yml
        - local.yml

    - name: Create an rpm output dir
      file:
        path: rpm
        state: directory

    - name: Configure EPEL
      yum:
        name: epel-release
        state: present
      become: yes

    - name: Install Development Tools
      yum:
        name: "{{ dev_tools }}"
        state: present
      become: yes

    - name: Install FPM Ruby gem
      gem:
        name: fpm
        state: present

    - name: Build Python Modules as RPM's
      command: >-
        bin/fpm -s python -t rpm -p rpm -f
        --rpm-dist el{{ ansible_facts['distribution_major_version'] }}
        --vendor {{ vendor }}
        "{{ item.name }}=={{ item.version }}"
      loop: "{{ python_mods }}"

    # For some reason the duo_client module will not build directly
    # from the the PyPi server, but it will build locally
    - name: Clone Python Duo Client from GitHub
      git:
        repo: https://github.com/duosecurity/duo_client_python.git
        dest: duo_client_python
        version: "{{ duo_client_version }}"

    - name: set_fact when alice in key
      set_fact:
        six_version: "{{ item.version }}"
      loop: "{{ python_mods }}"
      when: item.name == 'six'

    - name: Install Python six mod from local RPM
      yum:
        name: "rpm/python-six-{{ six_version }}-1.el{{ ansible_facts['distribution_major_version'] }}.noarch.rpm"
        state: present
      become: yes

    - name: Build Python Duo Client as RPM
      command: >-
        bin/fpm -s python -t rpm -p rpm -f
        --rpm-dist el{{ ansible_facts['distribution_major_version'] }}
        --vendor {{ vendor }}
        --depends python-six
        duo_client_python/setup.py

    - name: Download new RPM's
      synchronize:
        mode: pull
        src: rpm/
        dest: out/
